package org.fleen.forsythia.app.strobe;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/*
 * A blink pattern is 2 colors (color0 and color1) and a list of 60 booleans
 * true means color0, false means color1
 * at init we create a random pattern. Not too noisey, something nice
 * Like XXXOOOXXX or XOXOXOXO or XXXXOOXXXXOO
 * something like that. Like a simple drum beat
 * 
 * TODO add actual drum beats
 * when color transitions from 0 to 1 or 1 to 0 make a click, it could even be 2 different clicks, hi lo 
 * 
 * How to make a simple beat pattern
 * 
 * recursively split sequences
 * 
 * XXXXXXXXXXXX ... XXXXXXOOOOOO ...  XXXOOOXXXOOO
 * 
 * Or we could just define them literally.
 * 
 * we're doing a 60 frame pattern here. lots of factors
 * 
 * 
 */
public class BlinkPattern{
  
  /*
   * ################################
   * CONSTRUCTOR
   * ################################
   */
  
  BlinkPattern(Color color0,Color color1){
    this.color0=color0;
    this.color1=color1;
    int i=new Random().nextInt(patterns.size());
    pattern=patterns.get(i);}
  
  /*
   * ################################
   * COLOR
   * ################################
   */
  
  Color color0,color1;
  
  public Color getColor(int frameindex){
    boolean a=pattern[frameindex%PATTERNLENGTH];
    if(a)
      return color0;
    else
      return color1;}
  
  /*
   * ################################
   * PATTERN
   * ################################
   */
  
  private static final int PATTERNLENGTH=60;
  
//  private static final String[] LITERALPATTERNS={
//    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "XXXXXXXXXXXXXXXOOOOOOOOOOOOOOOXXXXXXXXXXXXXXXOOOOOOOOOOOOOOO",
//    "XXXXXXXXXXOOOOOOOOOOXXXXXXXXXXOOOOOOOOOOXXXXXXXXXXOOOOOOOOOO",
//    "XXXXXXXXXXXXXXXXOOOOXXXXXXXXXXXXXXXXOOOOXXXXXXXXXXXXXXXXOOOO",
//    "XOXOXOXOXOOOOOOOOOOOXOXOXOXOXOOOOOOOOOOOXOXOXOXOXOOOOOOOOOOO",
//    "OOOOOXOOOOOXOOOOOXOOOOOXOOOOOXOOOOOXOOOOOXOOOOOXOOOOOXOOOOOX",
//    "XXXXXXXXXXOOXXXXXXXXXXOOXXXXXXXXXXOOXXXXXXXXXXOOXXXXXXXXXXOO",
//    "XXXXXXXXXXXXXXXXXXXXOOOOOOOOOOXXXXXXXXXXXXXXXXXXXXOOOOOOOOOO",
//    "OOOOOOOOXXXXOOOOOOOOXXXXOOOOOOOOXXXXOOOOOOOOXXXXOOOOOOOOXXXX",
//    "XXXXXOXXXXXOXXXXXOXXXXXOXXXXXOXXXXXOXXXXXOXXXXXOXXXXXOXXXXXO"
//  
//  };
  

//  private static final String[] LITERALPATTERNS={
//    "XXXXXXXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOXXXXXXXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOXXXXXXXXXXXXOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXXXXXXXXOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXXXXXXXX",
//  };
  
  //moderate
//  private static final String[] LITERALPATTERNS={
//    "XXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOXXXXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXXOOOOOOOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXXOOOOOOOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXXOOOOOOOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXXOOOOOO",
//    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXXXX",
//    "OOOOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
//    "XXXXXXOOOOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
//    "XXXXXXXXXXXXOOOOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
//    "XXXXXXXXXXXXXXXXXXOOOOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
//    "XXXXXXXXXXXXXXXXXXXXXXXXOOOOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
//    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOOOOXXXXXXXXXXXXXXXXXXXXXXXX",
//    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOOOOXXXXXXXXXXXXXXXXXX",
//    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOOOOXXXXXXXXXXXX",
//    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOOOOXXXXXX",
//    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOOOO",
//  };
  
  //fast
  private static final String[] LITERALPATTERNS={
    "OOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXXXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOOXXX",
    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXOOO",
    
    "XXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOOOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXXOOO",
    "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOXXX",
    
  };
  
  private static List<boolean[]> patterns=new ArrayList<boolean[]>(LITERALPATTERNS.length);
  
  static{
    System.out.println("INITIALIZING BLINK PATTERNS");
    boolean[] pattern;
    Character b;
    for(String a:LITERALPATTERNS){
      pattern=new boolean[PATTERNLENGTH];
      patterns.add(pattern);
      for(int i=0;i<60;i++){
        b=a.charAt(i);
        pattern[i]=(b=='X');}}}//X is true, O is false
  
  private boolean[] pattern;
  
}
